"use strict";(self.webpackChunkrealtimely_doc=self.webpackChunkrealtimely_doc||[]).push([[575],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=u(n),d=i,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||o;return n?r.createElement(f,a(a({ref:t},s),{},{components:n})):r.createElement(f,a({ref:t},s))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3857:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return s},default:function(){return m}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],c={sidebar_position:6},l="Realtime User Action",u={unversionedId:"getting-started/realtime_user_action",id:"getting-started/realtime_user_action",isDocsHomePage:!1,title:"Realtime User Action",description:"Finally, I would like to introduce the most flexible and useful function useRealtimeUserAction.",source:"@site/docs/02_getting-started/06_realtime_user_action.md",sourceDirName:"02_getting-started",slug:"/getting-started/realtime_user_action",permalink:"/Realtimely/docs/getting-started/realtime_user_action",editUrl:"https://github.com/KitaharaMugiro/Realtimely-Docs/docs/02_getting-started/06_realtime_user_action.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Realtime Shared State",permalink:"/Realtimely/docs/getting-started/realtime_shared_state"},next:{title:"useRealtimeCursor",permalink:"/Realtimely/docs/api-guide/useRealtimeCursor"}},s=[],p={toc:s};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"realtime-user-action"},"Realtime User Action"),(0,o.kt)("p",null,"Finally, I would like to introduce the most flexible and useful function ",(0,o.kt)("inlineCode",{parentName:"p"},"useRealtimeUserAction"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'export default () => {\n    \n    function callback(actionId: string, value: string){\n        console.log({actionId, value})\n    }\n\n    const { pushUserAction } = useRealtimeUserAction(callback)\n\n    const onClick = (buttonNumber: number) => {\n        pushUserAction("actionId=" + buttonNumber, "value=" + buttonNumber)\n    }\n\n    return (\n        <div>\n            <button onClick={() => onClick(1)}>1</button>\n            <button onClick={() => onClick(2)}>2</button>\n            <button onClick={() => onClick(3)}>3</button>\n        </div>\n    )\n}\n')),(0,o.kt)("p",null,"User action monitoring is started by passing the callback function to the argument of ",(0,o.kt)("inlineCode",{parentName:"p"},"useRealtimeUserAction")," and executing it. By executing the return value ",(0,o.kt)("inlineCode",{parentName:"p"},"pushUserAction")," each time the button is pressed, an event is issued and the callback function is executed. Therefore, you can see that the number of the pressed button in console logs."))}m.isMDXComponent=!0}}]);